// +build !production

package main

import (
	"fmt"
	"os"
	"text/template"
	"time"
)

var Version string

func main() {

	f, err := os.Create("version.go")
	ok(err)
	defer func() {
		err := f.Close()
		ok(err)
	}()

	err = template.Must(template.New("").Parse(file_template)).Execute(
		f,
		struct {
			Timestamp time.Time
			Version   string
		}{
			Timestamp: time.Now(),
			Version:   Version,
		},
	)
	ok(err)
}

// ok exits on a non nil error.
func ok(err error) {
	if err != nil {
		fmt.Fprintf(os.Stderr, "error: generate version: %v\n", err)
		os.Exit(1)
	}
}

const file_template = `// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
package secrethub

// ClientVersion is the current version of the client
var ClientVersion string = "{{ .Version }}"
`
